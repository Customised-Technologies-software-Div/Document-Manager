<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    <Style x:Key="AddButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#7F91CE20"></Setter>
        <Setter Property="Foreground" Value="#FF6E4114"></Setter>
        <Setter Property="Width" Value="60px"></Setter>
        <Setter Property="Height" Value="25px"></Setter>
    </Style>
    <Style x:Key="UpdateButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FFF4AB46"></Setter>
        <Setter Property="Width" Value="60px"></Setter>
        <Setter Property="Height" Value="25px"></Setter>
    </Style>
    <Style x:Key="DeleteButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FFF33E3E"></Setter>
        <Setter Property="Width" Value="60px"></Setter>
        <Setter Property="Height" Value="25px"></Setter>
    </Style>
    <Style x:Key="CancelButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FF74B1FF"></Setter>
        <Setter Property="Width" Value="60px"></Setter>
        <Setter Property="Height" Value="25px"></Setter>
    </Style>
    <Style x:Key="BrowseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FFD4822E"></Setter>
        <Setter Property="Width" Value="25px"></Setter>
        <Setter Property="Height" Value="40px"></Setter>
    </Style>
    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FFAFE0FF"></Setter>
        <Setter Property="Width" Value="60px"></Setter>
        <Setter Property="Height" Value="25px"></Setter>
    </Style>
    <Style x:Key="RefreshButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FFE2D1C3"></Setter>
        <Setter Property="Width" Value="60px"></Setter>
        <Setter Property="Height" Value="25px"></Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#80C7C7C7" Offset="1"/>
                    <GradientStop Color="#A6D7D7D7" Offset="0.008"/>
                    <GradientStop Color="#FFFFFEE1" Offset="0.883"/>
                    <GradientStop Color="#FFFFFEE1" Offset="0.125"/>
                    <GradientStop Color="#A6D7D7D7" Offset="0.971"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="60px"></Setter>
        <Setter Property="Height" Value="25px"></Setter>
    </Style>
    <Style TargetType="DataGrid">
        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightCyan" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>